import urllib.request
import requests
from bs4 import *




def mot(mot):
    return mot


def entree():

    det1 = {"roue":1, "carburant":1, "vivant":1, "mammifère":1}

    return det1

def base_donnée():

    data = {"automobile":4,
            "voiture":3,
            "chat":-2,
            "chien":0,
            "train":5,
            "machine a eau":1,
            "raton":-2,
            "camion":2,
        }        

    return data


def nos_poids():
    un = 2
    deux = 2
    trois = -2
    quattre = -2

    return un, deux, trois, quattre

DICO_E = {}
def remplissage_dico_e(liste):
    for i in liste:
        DICO_E[i] = 0



class activation:

   
    def recherche(self, mot):
        self.mot = mot

        liste = []
        path = "https://fr.wikipedia.org/wiki/{}".format(self.mot)
        
        requete = requests.get(path)
        page = requete.content
        
        soup = BeautifulSoup(page, "html.parser")
        liste.append(soup)

        return liste


    def traitement_liste(self, liste):
        dico = entree()

        dico_poids = {}

        for i in dico:
            dico_poids[i] = 0
        
        for i in dico.keys():
            recherche = str(liste).find(str(i))
            if recherche >= 0:
                dico_poids[i] += 1
           
       
        return dico_poids



    def calcul_poids(self, dico_recherche):

        sortie = 0

        entre = entree()
        poids = nos_poids()

        c=0
        for i in dico_recherche.values():
            poid = i * poids[c]
            sortie += poid
            
            c+=1

        return sortie

                
    def calcul_erreur(self, mot, sortie, DICO_E):

        donnée = base_donnée()
        
        #print(mot)
        #print("en database:", donnée[mot])
        #print("sortie :", sortie)

        e = sortie - donnée[mot]
        #print("errueur:", e)

        if e > 0 or e < 0:
            DICO_E[mot] += e




class etape_deux:

    def modification_poids(self):
        donnée = base_donnée()
        poids = nos_poids()

        print(poids)

        print(donnée)
        print(DICO_E)

        
        for i in range(1000):
            pass








    def conclusion(self):
        pass
        #if > 0 :
        #    pass
        #else:
        #    pass





if __name__ == "__main__":

    liste = ["automobile","voiture","chat","chien",
             "train","machine a eau", "raton","camion"]

    activation = activation()
    remplissage_dico_e(liste)

    etape_deux = etape_deux()    

    for i in liste:
        
        liste = activation.recherche(i)
        liste2 = activation.traitement_liste(liste)
        sortie = activation.calcul_poids(liste2)
        activation.calcul_erreur(i, sortie,DICO_E)



    etape_deux.modification_poids()

    

















